{"version":3,"file":"index.js","sources":["../src/constants.js","../src/components/DigitalCounter.jsx","../src/components/Scoreboard.jsx","../src/hooks/useLongPress.jsx","../src/components/Cell.jsx","../src/components/MinesweeperGrid.jsx","../src/components/getNewGrid.js","../src/hooks/useTimer.jsx","../src/components/Minesweeper.jsx"],"sourcesContent":["export const gameStatuses = {\n  notStarted: \"notStarted\",\n  running: \"running\",\n  won: \"won\",\n  lost: \"lost\",\n};\n\nexport const levels = [\n  { id: 0, text: \"Beginner\", height: 10, width: 10, minesCount: 10 },\n  { id: 1, text: \"Intermediate\", height: 15, width: 15, minesCount: 40 },\n];\n","import React from 'react';\nimport './Scoreboard.component.css';\n\n\nexport function DigitalCounter(props) {\n    const str = \"\" + props.value\n    return (<div className=\"digital-counter\">{str.padStart(3, '0')}</div>);\n}\n\nexport default DigitalCounter;","import React from \"react\";\nimport { gameStatuses } from \"../constants\";\nimport { DigitalCounter } from \"./DigitalCounter\";\n\nexport function Scoreboard(props) {\n  return (\n    <div className=\"scoreboard\">\n      <DigitalCounter value={props.minesLeft} />\n      <GameStatus\n        status={props.gameStatus}\n        onClickHandler={props.resetHandler}\n        isClicking={props.isClicking}\n      />\n      <DigitalCounter value={props.timer} />\n    </div>\n  );\n}\n\nexport default Scoreboard;\n\nexport function GameStatus(props) {\n  function getStatusEmoji(status) {\n    if (status === gameStatuses.lost) {\n      return \"ðŸ˜ž\";\n    } else if (status === gameStatuses.won) {\n      return \"ðŸ˜Ž\";\n    } else {\n      return \"ðŸ˜Š\";\n    }\n  }\n\n  return (\n    <button className=\"reset\" onClick={props.onClickHandler}>\n      {props.isClicking ? \"ðŸ˜²\" : getStatusEmoji(props.status)}\n    </button>\n  );\n}\n","import { useCallback, useRef, useState } from \"react\";\n\nfunction useLongPress (\n    onLongPress,\n    onClick,\n    { shouldPreventDefault = true, delay = 300 } = {}\n) {\n  \n    const [longPressTriggered, setLongPressTriggered] = useState(false);\n    const timeout = useRef();\n    const target = useRef();\n\n    const start = useCallback(\n        event => {\n        if (shouldPreventDefault && event.target) {\n            event.target.addEventListener(\"touchend\", preventDefault, {\n            passive: false\n            });\n            target.current = event.target;\n        }\n        timeout.current = setTimeout(() => {\n            onLongPress(event);\n            setLongPressTriggered(true);\n        }, delay);\n        },\n        [onLongPress, delay, shouldPreventDefault]\n    );\n\n    const clear = useCallback(\n        (event, shouldTriggerClick = true) => {\n        timeout.current && clearTimeout(timeout.current);\n        shouldTriggerClick && !longPressTriggered && onClick();\n        setLongPressTriggered(false);\n        if (shouldPreventDefault && target.current) {\n            target.current.removeEventListener(\"touchend\", preventDefault);\n        }\n        },\n        [shouldPreventDefault, onClick, longPressTriggered]\n    );\n\n    return {\n        onClick: e => clear(e),\n        onContextMenu: e => {\n            e.preventDefault();\n            onLongPress();\n        },\n        onTouchStart: e => start(e),\n        onTouchEnd: e => clear(e)\n    };\n};\n\nconst isTouchEvent = event => {\n    return \"touches\" in event;\n};\n\nconst preventDefault = event => {\n    if (!isTouchEvent(event)) return;\n\n    if (event.touches.length < 2 && event.preventDefault) {\n        event.preventDefault();\n    }\n};\n\nexport default useLongPress;\n","import React from 'react';\nimport useLongPress from \"../hooks/useLongPress\";\n\nexport function Cell(props) {\n    const cell = props.data.isCovered ? 'cell' : 'uncovered-cell';\n    const number = !props.data.isCovered && !props.isMine ? `cell-${props.data.neighboringMines}` : '';\n    const mine = !props.data.isCovered && props.isMine ? 'cell-mine' : '';\n    const content = props.data.isCovered ?\n        (props.data.flagged ? 'ðŸš©' : '') : (props.data.isMine ? 'ðŸ’£' : props.data.neighboringMines > 0 ? props.data.neighboringMines : '');\n    const clickedMine = props.data.clickedMine ? 'clicked-mine' : ''\n\n    const callbacks = useLongPress(\n        () => props.handleRightClick(props.data),\n        () => props.handleLeftClick(props.data)\n    )\n    \n    return (\n        <button className={`${cell} ${number} ${mine} ${clickedMine}`}\n            {...callbacks}>\n            \n            { content}\n\n        </button>\n    );\n}\n\nexport default Cell;\n","import React, { useState } from 'react';\nimport { Cell } from './Cell';\nimport { gameStatuses } from '../constants';\n\n\nexport function MinesweeperGrid(props) {\n    const [grid, setGrid] = useState(props.grid);\n    const [refresh, setRefresh] = useState(props.refresh);\n\n    if(refresh !== props.refresh) {\n        setRefresh(props.refresh);\n        setGrid(props.grid);\n    }\n\n    function handleRightClick(cell) {\n        props.cellGotClicked();\n\n        const [x, y] = [cell.x, cell.y];\n\n        if (!grid[x][y].isCovered || props.gameOver)\n            return;\n\n        const newGrid = grid.map(r => r.map(c => ({...c})));\n\n        newGrid[x][y].flagged = !newGrid[x][y].flagged;\n        \n        if(hasWon(newGrid)) {\n            props.setGameEnd(gameStatuses.won);\n        }\n\n        setGrid(newGrid);\n        props.cellGotFlagged(newGrid[x][y].flagged);\n    }\n\n    const hasWon = (grid) => grid.reduce((a, r) => a && r.reduce((a, c) => a && (c.isMine || !c.isCovered), true), true);\n\n    function handleLeftClick(cell) {\n        const [x, y] = [cell.x, cell.y];\n        props.cellGotClicked();\n\n        if (!grid[x][y].isCovered || grid[x][y].flagged || props.gameOver)\n            return;\n\n        if (grid[x][y].isMine) {\n            const newGrid = grid.map(r => r.map(c => ({\n                ...c,\n                isCovered: c.isMine ? false : c.isCovered\n            })));\n            newGrid[x][y].clickedMine = true;\n\n            setGrid(newGrid);\n            props.setGameEnd(gameStatuses.lost);\n        }\n        else  {\n            const newGrid = grid.map(r => r.map(c => ({\n                ...c\n            })));\n            newGrid[x][y].isCovered = false;\n            \n            if (grid[x][y].neighboringMines === 0) {\n                uncoverEmptyGrid(newGrid, cell);\n            }\n            else {\n                setGrid(newGrid);\n            }\n\n            if(hasWon(newGrid)) {\n                const flagsSetGrid = newGrid.map(r => r.map(c => ({\n                    ...c,\n                    flagged: c.isMine\n                })));\n                \n                setGrid(flagsSetGrid);\n                props.setGameEnd(gameStatuses.won);\n            }\n        }\n    }\n\n    // BFS\n    function uncoverEmptyGrid(grid, cell) {\n        const queue = [[cell.x, cell.y]];\n        let k = 0;\n        const length = grid.length;\n        const width = grid[0].length;\n\n        while (queue.length > 0) {\n            const n = queue.length;\n            for (let l = 0; l < n; l++) {\n                const [x, y] = queue.shift();\n\n                for (let i = Math.max(0, x - 1); i < Math.min(length, x + 2); ++i) {\n                    for (let j = Math.max(0, y - 1); j < Math.min(width, y + 2); ++j) {\n                        if (!grid[i][j].isMine && grid[i][j].isCovered && !grid[i][j].flagged) {\n                            grid[i][j].isCovered = false;\n                            if(grid[i][j].neighboringMines === 0) {\n                                queue.push([i, j]);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // update after each breadth search cycle for animation\n            setTimeout((newGrid) => {\n                setGrid(newGrid);\n            }, k++ * 50, grid);\n        }\n    }\n\n    return (\n        grid.map((r, i) => <div key={i} className=\"row\">\n            {r.map((c, j) => <Cell\n                key={j}\n                data={c}\n                handleLeftClick={handleLeftClick}\n                handleRightClick={handleRightClick} />)}\n        </div>\n        )\n    );\n}\n","export function getNewGrid(length, width, minesCount) {\n\n    function getNewCells(length, width) {\n        let grid = [];\n        for (var i = 0; i < length; i++) {\n            grid[i] = [];\n            for (var j = 0; j < width; j++) {\n                grid[i][j] = {\n                    isMine: false\n                };\n            }\n        }\n\n        return grid;\n    }\n\n    function addMines(grid, minesCount) {\n        for (var i = 0; i < grid.length && minesCount; ++i) {\n            for (var j = 0; j < grid[i].length && minesCount; ++j, --minesCount) {\n                grid[i][j] = {\n                    isMine: true\n                };\n            }\n        }\n\n        return grid;\n    }\n\n    function randomize(grid) {\n        const n = grid.length;\n        const m = grid[0].length;\n        for (let i = 0; i < n; ++i) {\n            for (let j = 0; j < m; ++j) {\n                const rand = Math.floor(Math.random() * n * m);\n                const i1 = Math.floor(rand / m);\n                const j1 = rand % m;\n                [grid[i][j], grid[i1][j1]] = [grid[i1][j1], grid[i][j]];\n            }\n        }\n\n        return grid;\n    }\n\n    function setneighboringMines(mines) {\n\n        function calcNneighboringMines(x, y) {\n            var count = 0;\n\n            for (var i = Math.max(0, x - 1); i < Math.min(mines.length, x + 2); ++i) {\n                for (var j = Math.max(0, y - 1); j < Math.min(mines[i].length, y + 2); ++j) {\n                    if (mines[i][j].isMine) {\n                        count++;\n                    }\n                }\n            }\n\n            return count;\n        }\n\n        for (var i = 0; i < mines.length; ++i) {\n            for (var j = 0; j < mines[i].length; ++j) {\n                mines[i][j].neighboringMines = calcNneighboringMines(i, j);\n            }\n        }\n\n        return mines;\n    }\n\n    return setneighboringMines(randomize(addMines(getNewCells(length, width), minesCount)))\n        .map((r, i) => r.map((c, j) => ({\n            isCovered: true,\n            isMine: c.isMine,\n            neighboringMines: c.neighboringMines,\n            x: i,\n            y: j,\n        })));\n}\n","import { useState, useEffect } from 'react';\n\nexport function useTimer(isActive, reset) {\n    const [timer, setTimer] = useState(0);\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive && !interval) {\n            interval = setTimeout(() => {\n                setTimer(timer => timer + 1);\n            }, 1000);\n        } else if (interval) {\n            clearTimeout(interval);\n        }\n\n        if (reset) {\n            setTimer(0);\n        }\n\n        return () => clearTimeout(interval);\n    }, [timer, isActive, reset]);\n\n    return timer;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Scoreboard } from './Scoreboard';\nimport './Cell.component.css';\nimport './Minesweeper.component.css';\nimport { MinesweeperGrid } from './MinesweeperGrid';\nimport { getNewGrid } from './getNewGrid';\nimport { gameStatuses, levels } from '../constants';\nimport { useTimer } from '../hooks/useTimer';\n\n\nfunction Minesweeper() {\n    const [level, setLevel] = useState(levels[0]);\n\n    const [minesLeft, setMinesLeft] = useState(level.minesCount);\n    const [gameStatus, setGameStatus] = useState(gameStatuses.notStarted);\n    const [grid, setGrid] = useState(getNewGrid(level.height, level.width, level.minesCount));\n    const [refresh, setRefresh] = useState(false);\n    const [isClicking, setIsClicking] = useState(false);\n\n    const timer = useTimer(gameStatus === gameStatuses.running, gameStatus === gameStatuses.notStarted);\n\n    useEffect(reset, [level] );\n\n    function reset() {\n        setGameStatus(gameStatuses.notStarted);\n        setMinesLeft(level.minesCount);\n        setGrid(getNewGrid(level.height, level.width, level.minesCount));\n        setRefresh(refresh => !refresh);\n    }\n    \n    \n    const isGameOver = () => gameStatus === gameStatuses.won || gameStatus === gameStatuses.lost;\n\n    function cellGotFlagged(flagged) {\n        if(flagged) {\n            setMinesLeft(minesLeft-1);\n        }\n        else {\n            setMinesLeft(minesLeft+1);\n        }\n    }\n    \n    function cellGotClicked() {\n        if(gameStatus === gameStatuses.notStarted) {\n            setGameStatus(gameStatuses.running);\n        }\n    }\n\n    function setGameEnd(status) {\n        setGameStatus(status);\n        if (status === gameStatuses.won) {\n            setMinesLeft(0);\n        }\n    }\n\n    function levelChangeHandler(newLevelId) {\n        if(newLevelId !== level) {\n            setLevel(levels[newLevelId]);\n        }\n    }\n\n    return (\n        <div className=\"minesweeper\">\n            <Scoreboard \n                minesLeft={minesLeft}\n                timer={timer}\n                gameStatus={gameStatus}\n                level={level.id}\n                levelChangeHandler={levelChangeHandler}\n                isClicking={isClicking}\n                resetHandler={reset} />\n            <div className=\"grid\" onMouseDown={() => setIsClicking(true)} onMouseUp={() => setIsClicking(false)} onMouseLeave={() => setIsClicking(false)}>\n                <MinesweeperGrid\n                    refresh={refresh}\n                    grid={grid}\n                    gameOver={isGameOver()}\n                    cellGotFlagged={cellGotFlagged}\n                    cellGotClicked={cellGotClicked}\n                    setGameEnd={setGameEnd} />\n            </div>\n        </div>\n    );\n}\n\nexport default Minesweeper;\n\n"],"names":["gameStatuses","notStarted","running","won","lost","levels","id","text","height","width","minesCount","DigitalCounter","props","str","value","React","padStart","Scoreboard","minesLeft","gameStatus","resetHandler","isClicking","timer","GameStatus","getStatusEmoji","status","onClickHandler","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","longPressTriggered","setLongPressTriggered","useState","timeout","useRef","target","start","useCallback","event","addEventListener","preventDefault","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","e","onContextMenu","onTouchStart","onTouchEnd","isTouchEvent","touches","length","Cell","cell","data","isCovered","number","isMine","neighboringMines","mine","content","flagged","clickedMine","callbacks","handleRightClick","handleLeftClick","MinesweeperGrid","grid","setGrid","refresh","setRefresh","cellGotClicked","x","y","gameOver","newGrid","map","r","c","hasWon","setGameEnd","cellGotFlagged","reduce","a","uncoverEmptyGrid","flagsSetGrid","queue","k","n","l","shift","i","Math","max","min","j","push","getNewGrid","getNewCells","addMines","randomize","m","rand","floor","random","i1","j1","setneighboringMines","mines","calcNneighboringMines","count","useTimer","isActive","reset","setTimer","useEffect","interval","Minesweeper","level","setLevel","setMinesLeft","setGameStatus","setIsClicking","isGameOver","levelChangeHandler","newLevelId"],"mappings":"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"}